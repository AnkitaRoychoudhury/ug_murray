////////////////////////////////////////////////////////////////////////////
//
//   gro
//
//   Copyright (c) 2011-2012 Eric Klavins, University of Washington
//   For more information, email klavins@uw.edu
//
//   This program is free software; you can redistribute it and/or
//   modify it under the terms of the GNU General Public License
//   as published by the Free Software Foundation; either version 2
//   of the License, or (at your option) any later version.
//
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
//
//   You should have received a copy of the GNU General Public License
//   along with this program; if not, write to the Free Software
//   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
// 
// 

include gro

dummy := if ( ARGC != 4 ) then {
  print ( "Expected two numeric arguments for max cell count and initial gfp level\n" ),
  exit()
} else {} end; // note that you need to assign the value of this statement to a dummy
               // variable to avoid having {} printed to standard output.
 
maxpop := atoi ( ARGV[2] );
gfp0 := atoi ( ARGV[3] );

set ( "population_max", maxpop + 100 );

program p() := {

  gfp := gfp0;
  rate ( 1 ) : { gfp := gfp + 1 }

};

ecoli ( [], program p() );

program main() := {

  L := {};

  true : {
    L := maptocells gfp end
  }

  length(L) > maxpop : {
    print ( L, "\n" ),
    exit()
  }

};
