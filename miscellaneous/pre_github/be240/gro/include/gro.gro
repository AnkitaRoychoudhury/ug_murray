////////////////////////////////////////////////////////////////////////////
// 
//   gro 
// 
//   Copyright (c) 2011-2012 Eric Klavins, University of Washington
//   For more information, email klavins@uw.edu
// 
//   This program is free software; you can redistribute it and/or
//   modify it under the terms of the GNU General Public License
//   as published by the Free Software Foundation; either version 2
//   of the License, or (at your option) any later version.
// 
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
// 
//   You should have received a copy of the GNU General Public License
//   along with this program; if not, write to the Free Software
//   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
// 
//

include standard

// Cell types
internal unit ecoli ( [ ... ], 'a ) "ecoli";

// Signals
internal int signal ( real, real ) "signal";
internal unit set_signal ( int, real, real, real ) "set_signal";
internal unit set_signal_rect ( int, real, real, real, real, real ) "set_signal_rect";
internal real get_signal ( int ) "get_signal";
internal unit emit_signal ( int, real ) "emit_signal";
internal unit absorb_signal ( int, real ) "absorb_signal";
internal unit reaction ( int list, int list, real ) "reaction";

// World control
internal unit message ( int, string ) "message";
internal unit clear_messages ( int ) "clear_messages";
internal unit reset () "reset";
internal unit stop () "stop";
internal unit start () "start";
internal real stats ( string ) "stats";
internal unit snapshot ( string ) "snapshot";

// Themes
dark_theme := [

  background := "#000000",
  ecoli_edge := "#444444",
  ecoli_selected := "#880000",

  signals := {
    { 1, 0, 1 },
    { 0, 1, 1 },
    { 1, 1, 0 },
    { 1, 0, 0 },
    { 0, 1, 0 },
    { 0, 0, 1 }
  },

  chemostat := "#444499",
  message := "#999999",
  mouse := "#ffffff"

];

bright_theme := [

  background := "#ffffff",
  ecoli_edge := "#777777",
  ecoli_selected := "#ff0000",

  signals := {
    { 1, 0, 1 },
    { 0, 1, 1 },
    { 1, 1, 0 },
    { 1, 0, 0 },
    { 0, 1, 0 },
    { 0, 0, 1 }
  },

  chemostat := "#999999",
  message := "#999999",
  mouse := "#000000"

];

internal unit set_theme ( [ ... ] ) "set_theme";
set_theme ( bright_theme );

// Signals

// Chemostat
internal unit chemostat ( bool ) "chemostat";


// Misc
internal unit die() "die";
internal unit divide() "divide";
internal unit run ( real ) "run";
internal unit tumble ( real ) "tumble";

// Parameter Values
internal unit set ( string, real ) "set";

// default global parameters
set ( "dt", 0.02 );
set ( "gfp_saturation_min", 0.0 );
set ( "gfp_saturation_max", 50.0 );
set ( "rfp_saturation_min", 0.0 );
set ( "rfp_saturation_max", 50.0 );
set ( "yfp_saturation_min", 0.0 );
set ( "yfp_saturation_max", 50.0 );
set ( "cfp_saturation_min", 0.0 );
set ( "cfp_saturation_max", 50.0 );

set ( "chemostat_width",  200 );
set ( "chemostat_height", 200 );

set ( "throttle", 0.0 ); 
set ( "population_max", 1000 );

// signal parameters. Note: if you redefine these, do so before you
// declare any signals. The parameters can't be changed after signals are declared,
// and they apply to all of signals you declare.
set ( "signal_grid_width", 800 );
set ( "signal_grid_height", 800 );
set ( "signal_element_size", 5 );

// default paramters for E. coli
set ( "ecoli_growth_rate", 0.0346574 );   // reactions/min
set ( "ecoli_init_size", 1.57 );          // fL
set ( "ecoli_division_size_mean", 3.14 ); // fL
set ( "ecoli_division_size_var", 0.005 ); // fL
set ( "ecoli_diameter", 1.0 );            // fL
set ( "ecoli_scale", 10.0 );              // pixels/um

