////////////////////////////////////////////////////////////////////////////
// 
//   gro 
// 
//   Copyright (c) 2011-2012 Eric Klavins, University of Washington
//   For more information, email klavins@uw.edu
// 
//   This program is free software; you can redistribute it and/or
//   modify it under the terms of the GNU General Public License
//   as published by the Free Software Foundation; either version 2
//   of the License, or (at your option) any later version.
// 
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
// 
//   You should have received a copy of the GNU General Public License
//   along with this program; if not, write to the Free Software
//   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
// 
// 

include gro

MAX_RATE := 1/dt;
set ( "dt", 0.1 );

ahl := signal (1,1);

//fun printData t s . print(t,"\t",s,"\n");
//fun printPose x y r . print(

program follower() := { 

  rfp := 0;
  edge := false;
  p := [ t := 0 ];

  rate(MAX_RATE*0.0001) : { emit_signal ( ahl, 100 ) }

  p.t >= 6 & get_signal ( ahl ) > 0.1 : { 
    emit_signal ( ahl, 100 ),
    p.t := 0
  }

  p.t > 3 & p.t <= 3.3: { edge := get_signal(ahl) < 0.2 }

  edge : { rfp := rfp + 1 }

  !edge & rate(MAX_RATE*0.1 * rfp) : { rfp := rfp - 1 }

  true : { p.t := p.t + dt }

};

/*program main() := {
  t := 0;
  n := 0;
  T := 0.5;
  path := "movie1/";

  true : { t := t + dt; }

  t > T : { 
    snapshot ( path <> tostring(n) <> ".tif" ),
    n := n + 1,
    t := 0
  }
};*/

ecoli ( [ x:= 100, y:= 100 ], program follower() );
ecoli ( [ x:= -100, y:= -100 ], program follower() );
ecoli ( [ x:= -100, y:= 100 ], program follower() );
ecoli ( [ x:= 100, y:= -100 ], program follower() );

start();


