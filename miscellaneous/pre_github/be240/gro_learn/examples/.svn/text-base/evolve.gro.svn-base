////////////////////////////////////////////////////////////////////////////
// 
//   gro 
// 
//   Copyright (c) 2011-2012 Eric Klavins, University of Washington
//   For more information, email klavins@uw.edu
// 
//   This program is free software; you can redistribute it and/or
//   modify it under the terms of the GNU General Public License
//   as published by the Free Software Foundation; either version 2
//   of the License, or (at your option) any later version.
// 
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
// 
//   You should have received a copy of the GNU General Public License
//   along with this program; if not, write to the Free Software
//   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
// 
// 

include gro

set ( "dt", 0.075 );

nutrient := 1;
kinit := 0.25;
dk := 0.05;

fun cost e n . 0.2 * e * n / ( 50.0 + n );
fun benefit e n . 0.002 * e / ( 1.0 - 0.01 * e );
fun fitness e n . cost e n - benefit e n;

program evolver() := {

  p := [ k := kinit ];
  E := 25;
  t := 0;

  rate ( p.k * volume ) : { E := E + 1 }
  rate ( 0.05 * E ) : { E := E - 1 }

  true : { set ( "ecoli_growth_rate", 0.001 + fitness E nutrient ), t := t + dt }

  daughter : {
   p.k := p.k + dk * ( rand ( 1000 ) - 500 ) / 1000.0,
   print ( t, ", ", p.k, "\n" )
  }

};

program report() := {

  needs E, p;

  selected : { message ( 1,
          "cell "  <> tostring(id)
     <> ": E="  <> tostring(E) 
     <> ", k="   <> tostring(p.k) 
     <> ", f=" <> tostring(fitness E nutrient) ) }

};

ecoli ( [ x := 0, y := 0 ], program evolver() + report() sharing E, p );

